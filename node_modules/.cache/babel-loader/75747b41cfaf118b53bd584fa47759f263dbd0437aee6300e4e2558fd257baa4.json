{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\BMP_HCI_S6\\\\client\\\\src\\\\screens\\\\Homescreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Room from \"../components/Room\";\nimport Loader from '../components/Loader';\nimport Error from '../components/Error';\nimport { DatePicker, Space } from 'antd';\nimport 'antd/dist/reset.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nfunction Homescreen() {\n  _s();\n  const [fromDate, setFromDate] = useState();\n  const [toDate, setToDate] = useState();\n  const [rooms, setrooms] = useState([]);\n  const [duplicateRooms, setduplicateRooms] = useState([]);\n  const [loading, setloading] = useState();\n  const [error, seterror] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setloading(true);\n        const data = (await axios.get(\"http://localhost:5000/api/rooms/getAllRooms\")).data;\n        setrooms(data);\n        setduplicateRooms(data);\n        setloading(false);\n      } catch (error) {\n        seterror(true);\n        console.log(error);\n        setloading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  function filterByDate(dates) {\n    var temprooms = [];\n    console.log(dates[0].format('DD-MM-YYYY'));\n    console.log(dates[1].format('DD-MM-YYYY'));\n    setFromDate(dates[0].format('DD-MM-YYYY'));\n    setToDate(dates[1].format('DD-MM-YYYY'));\n    function isRoomAvailable(room, fromDate, toDate) {\n      const startDateMoment = moment(fromDate, 'DD-MM-YYYY');\n      const endDateMoment = moment(toDate, 'DD-MM-YYYY');\n      for (const booking of room.currentBookings) {\n        const fromDateMoment = moment(booking.fromDate, 'DD-MM-YYYY');\n        const toDateMoment = moment(booking.toDate, 'DD-MM-YYYY');\n        if (!(startDateMoment.isBetween(fromDateMoment, toDateMoment, null, '[]') || endDateMoment.isBetween(fromDateMoment, toDateMoment, null, '[]') || fromDateMoment.isBetween(startDateMoment, endDateMoment, null, '[]') || toDateMoment.isBetween(startDateMoment, endDateMoment, null, '[]'))) {\n          temprooms.push(room); // Room is not available if there's any booking overlapping\n        }\n      } // Room is available\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: /*#__PURE__*/_jsxDEV(RangePicker, {\n          format: \"DD-MM-YYYY\",\n          onChange: filterByDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this) : availableRooms.length >= 1 ? availableRooms.map(room => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-9 mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Room, {\n            room: room,\n            fromDate: fromDate,\n            toDate: toDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 32\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Homescreen, \"7UjFJC2gIZ3ZGy2GsscRXgxkVLY=\");\n_c = Homescreen;\n;\nexport default Homescreen;\nvar _c;\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","Room","Loader","Error","DatePicker","Space","moment","jsxDEV","_jsxDEV","RangePicker","Homescreen","_s","fromDate","setFromDate","toDate","setToDate","rooms","setrooms","duplicateRooms","setduplicateRooms","loading","setloading","error","seterror","fetchData","data","get","console","log","filterByDate","dates","temprooms","format","isRoomAvailable","room","startDateMoment","endDateMoment","booking","currentBookings","fromDateMoment","toDateMoment","isBetween","push","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","availableRooms","length","map","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/BMP_HCI_S6/client/src/screens/Homescreen.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Room from \"../components/Room\";\r\nimport Loader from '../components/Loader';\r\nimport Error from '../components/Error';\r\nimport { DatePicker, Space } from 'antd';\r\nimport 'antd/dist/reset.css'\r\nimport moment from 'moment'\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction Homescreen(){\r\n\r\n    const [fromDate,setFromDate] = useState();\r\n    const [toDate,setToDate] = useState();\r\n    const [rooms, setrooms] = useState([]);\r\n    const [duplicateRooms,setduplicateRooms] = useState([])\r\n    const [loading, setloading] = useState();\r\n    const [error, seterror] = useState();\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                setloading(true);\r\n                const data = (await axios.get(\"http://localhost:5000/api/rooms/getAllRooms\")).data;\r\n                setrooms(data);\r\n                setduplicateRooms(data);\r\n                setloading(false);\r\n            } catch (error) {\r\n                seterror(true);\r\n                console.log(error);\r\n                setloading(false);\r\n            }\r\n        }\r\n        fetchData();\r\n      }, []); \r\n\r\n    function filterByDate(dates) {\r\n        var temprooms =[]\r\n        console.log(dates[0].format('DD-MM-YYYY'))\r\n        console.log(dates[1].format('DD-MM-YYYY'))\r\n        setFromDate(dates[0].format('DD-MM-YYYY'))\r\n        setToDate(dates[1].format('DD-MM-YYYY'))\r\n        function isRoomAvailable(room, fromDate, toDate) {\r\n            const startDateMoment = moment(fromDate, 'DD-MM-YYYY');\r\n            const endDateMoment = moment(toDate, 'DD-MM-YYYY');\r\n            for (const booking of room.currentBookings) {\r\n                const fromDateMoment = moment(booking.fromDate, 'DD-MM-YYYY');\r\n                const toDateMoment = moment(booking.toDate, 'DD-MM-YYYY');\r\n                if (!(startDateMoment.isBetween(fromDateMoment, toDateMoment, null, '[]') ||\r\n                    endDateMoment.isBetween(fromDateMoment, toDateMoment, null, '[]') ||\r\n                    fromDateMoment.isBetween(startDateMoment, endDateMoment, null, '[]') ||\r\n                    toDateMoment.isBetween(startDateMoment, endDateMoment, null, '[]'))) {\r\n                    temprooms.push(room) // Room is not available if there's any booking overlapping\r\n                }\r\n            }// Room is available\r\n        }\r\n    }\r\n      \r\n    return(\r\n        <div className=\"container\">\r\n            \r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3\">\r\n                    <RangePicker format='DD-MM-YYYY' onChange={filterByDate}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row justify-content-center mt-5\">\r\n                {loading ? (<Loader/>) : availableRooms.length>=1 ? (availableRooms.map(room=>{\r\n                        return <div className=\"col-md-9 mt-2\">\r\n                            <Room room={room} fromDate={fromDate} toDate={toDate} />\r\n                        </div>\r\n                })) : (<Error/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\nexport default Homescreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,UAAU,EAAEC,KAAK,QAAQ,MAAM;AACxC,OAAO,qBAAqB;AAC5B,OAAOC,MAAM,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAM;EAAEC;AAAY,CAAC,GAAGL,UAAU;AAElC,SAASM,UAAUA,CAAA,EAAE;EAAAC,EAAA;EAEjB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGf,QAAQ,CAAC,CAAC;EACzC,MAAM,CAACgB,MAAM,EAACC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC;EACrC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,cAAc,EAACC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC;EACpCC,SAAS,CAAC,MAAM;IACZ,eAAeyB,SAASA,CAAA,EAAG;MACvB,IAAI;QACAH,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMI,IAAI,GAAG,CAAC,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,6CAA6C,CAAC,EAAED,IAAI;QAClFR,QAAQ,CAACQ,IAAI,CAAC;QACdN,iBAAiB,CAACM,IAAI,CAAC;QACvBJ,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,QAAQ,CAAC,IAAI,CAAC;QACdI,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;QAClBD,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;IACAG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAER,SAASK,YAAYA,CAACC,KAAK,EAAE;IACzB,IAAIC,SAAS,GAAE,EAAE;IACjBJ,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC,CAAC;IAC1CL,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC,CAAC;IAC1CnB,WAAW,CAACiB,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC,CAAC;IAC1CjB,SAAS,CAACe,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC,CAAC;IACxC,SAASC,eAAeA,CAACC,IAAI,EAAEtB,QAAQ,EAAEE,MAAM,EAAE;MAC7C,MAAMqB,eAAe,GAAG7B,MAAM,CAACM,QAAQ,EAAE,YAAY,CAAC;MACtD,MAAMwB,aAAa,GAAG9B,MAAM,CAACQ,MAAM,EAAE,YAAY,CAAC;MAClD,KAAK,MAAMuB,OAAO,IAAIH,IAAI,CAACI,eAAe,EAAE;QACxC,MAAMC,cAAc,GAAGjC,MAAM,CAAC+B,OAAO,CAACzB,QAAQ,EAAE,YAAY,CAAC;QAC7D,MAAM4B,YAAY,GAAGlC,MAAM,CAAC+B,OAAO,CAACvB,MAAM,EAAE,YAAY,CAAC;QACzD,IAAI,EAAEqB,eAAe,CAACM,SAAS,CAACF,cAAc,EAAEC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,IACrEJ,aAAa,CAACK,SAAS,CAACF,cAAc,EAAEC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,IACjED,cAAc,CAACE,SAAS,CAACN,eAAe,EAAEC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,IACpEI,YAAY,CAACC,SAAS,CAACN,eAAe,EAAEC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;UACrEL,SAAS,CAACW,IAAI,CAACR,IAAI,CAAC,EAAC;QACzB;MACJ,CAAC;IACL;EACJ;EAEA,oBACI1B,OAAA;IAAKmC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEtBpC,OAAA;MAAKmC,SAAS,EAAC,UAAU;MAAAC,QAAA,eACrBpC,OAAA;QAAKmC,SAAS,EAAC,UAAU;QAAAC,QAAA,eACrBpC,OAAA,CAACC,WAAW;UAACuB,MAAM,EAAC,YAAY;UAACa,QAAQ,EAAEhB;QAAa;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENzC,OAAA;MAAKmC,SAAS,EAAC,iCAAiC;MAAAC,QAAA,EAC3CxB,OAAO,gBAAIZ,OAAA,CAACN,MAAM;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,GAAIC,cAAc,CAACC,MAAM,IAAE,CAAC,GAAID,cAAc,CAACE,GAAG,CAAClB,IAAI,IAAE;QACtE,oBAAO1B,OAAA;UAAKmC,SAAS,EAAC,eAAe;UAAAC,QAAA,eACjCpC,OAAA,CAACP,IAAI;YAACiC,IAAI,EAAEA,IAAK;YAACtB,QAAQ,EAAEA,QAAS;YAACE,MAAM,EAAEA;UAAO;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MACd,CAAC,CAAC,gBAAKzC,OAAA,CAACL,KAAK;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAACtC,EAAA,CAlEQD,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AAkElB;AAED,eAAeA,UAAU;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}